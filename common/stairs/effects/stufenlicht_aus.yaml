# Bei diesem Effekt wird jede Stufe einzeln ausgeschaltet. (Laufrichtung von Stripe-Start nach Stripe-Ende)
- addressable_lambda:
    name: "Stufenlicht rauf aus"
    update_interval: ${update_intervall}
    lambda: |-
      static int last_reset = 0;
      int von = 0;

      if (last_reset == 0 || (millis() - last_reset) >= (id(stufen_anzahl) * id(schritt_intervall))) {
        last_reset = millis();
      }

      uint16_t progress = ((millis() - last_reset) / id(schritt_intervall)) % id(stufen_anzahl);

      for (int stufe = 0; stufe < id(stufen_anzahl); stufe++) {
        if (stufe == progress) {
          it.range(von, von + id(led_stufen)[stufe]) = Color(0, 0, 0);
        }
        von += id(led_stufen)[stufe];
      }

# Bei diesem Effekt wird jede Stufe einzeln ausgeschaltet. (Laufrichtung von Stripe-Ende nach Stripe-Start)
- addressable_lambda:
    name: "Stufenlicht runter aus"
    update_interval: ${update_intervall}
    lambda: |-
      static int last_reset = 0;
      int von = 0;

      if (last_reset == 0 || (millis() - last_reset) >= (id(stufen_anzahl) * id(schritt_intervall))) {
        last_reset = millis();
      }

      uint16_t progress = id(stufen_anzahl) - 1 - (((millis() - last_reset) / id(schritt_intervall)) % id(stufen_anzahl));

      for (int stufe = 0; stufe < id(stufen_anzahl); stufe++) {
        if (stufe == progress) {
          it.range(von, von + id(led_stufen)[stufe]) = Color(0, 0, 0);
        }
        von += id(led_stufen)[stufe];
      }
